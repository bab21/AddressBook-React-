[{"C:\\Users\\hp\\Desktop\\HelloWorld\\address-book-react\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\HelloWorld\\address-book-react\\src\\App.js":"2","C:\\Users\\hp\\Desktop\\HelloWorld\\address-book-react\\src\\reportWebVitals.js":"3","C:\\Users\\hp\\Desktop\\HelloWorld\\address-book-react\\src\\components\\home\\home.jsx":"4","C:\\Users\\hp\\Desktop\\HelloWorld\\address-book-react\\src\\components\\address-book-form\\address-book-form.jsx":"5","C:\\Users\\hp\\Desktop\\HelloWorld\\address-book-react\\src\\services\\AddressBookService.js":"6","C:\\Users\\hp\\Desktop\\HelloWorld\\address-book-react\\src\\components\\address-book-form\\utility.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":620,"mtime":1608811707789,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":4851,"mtime":1608887462414,"results":"12","hashOfConfig":"9"},{"size":10296,"mtime":1608884955488,"results":"13","hashOfConfig":"9"},{"size":729,"mtime":1608870587236,"results":"14","hashOfConfig":"9"},{"size":672,"mtime":1608883415391,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"31ehxe",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"C:\\Users\\hp\\Desktop\\HelloWorld\\address-book-react\\src\\index.js",[],["34","35"],"C:\\Users\\hp\\Desktop\\HelloWorld\\address-book-react\\src\\App.js",["36","37"],"import logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router,Switch,Route,Redirect} from \"react-router-dom\";\nimport AddressBookForm from './components/address-book-form/address-book-form';\nimport Home from './components/home/home';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/add-contact/:id\" component={AddressBookForm}>\n            <AddressBookForm/>\n          </Route>\n          <Route path=\"/home\" component={Home}>\n            <Home/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\hp\\Desktop\\HelloWorld\\address-book-react\\src\\reportWebVitals.js",[],"C:\\Users\\hp\\Desktop\\HelloWorld\\address-book-react\\src\\components\\home\\home.jsx",["38"],"C:\\Users\\hp\\Desktop\\HelloWorld\\address-book-react\\src\\components\\address-book-form\\address-book-form.jsx",["39","40","41","42","43","44","45","46","47","48","49"],"import './address-book-form.css';\r\n\r\nimport {useParams,Link,withRouter} from 'react-router-dom';\r\nimport AddressBookService from '../../services/AddressBookService';\r\nimport addressBookIcon from '../../assets/icons/address_book_icon.jpg';\r\nimport cancelIcon from '../../assets/icons/cancel.jpg';\r\nimport React, {Component} from 'react'\r\nimport { checkName,checkAddress,checkPhoneNumber,checkZip } from \"./utility.js\";\r\n\r\n\r\n\r\nclass AddressBookForm extends Component{\r\n    constructor(props){\r\n        super(props)\r\n\r\n        this.state={\r\n            id: this.props.match.params.id,\r\n            fullName: '',\r\n            address: '',\r\n            city: '',\r\n            state: '',\r\n            phoneNumber: '',\r\n            zip: '',\r\n            nameError: '',\r\n            addressError: '',\r\n            phoneError: '',\r\n            zipError: '',\r\n            \r\n        }\r\n        this.changeNameHandler=this.changeNameHandler.bind(this);\r\n        this.changeAddressHandler =this.changeAddressHandler.bind(this);\r\n        this.changeCityHandler =this.changeCityHandler.bind(this);\r\n        this.changeStateHandler=this.changeStateHandler.bind(this);\r\n        this.changePhoneNumberHandler=this.changePhoneNumberHandler.bind(this);\r\n        this.changeZipCodeHandler=this.changeZipCodeHandler.bind(this);\r\n    }\r\n    componentWillMount(){\r\n        if(this.state.id === '_add'){\r\n            return\r\n        }else{\r\n            AddressBookService.getContactById(this.state.id).then( (res) =>{\r\n                let contact = res.data.data;\r\n                console.log(contact);\r\n                let OfullName= contact.fullName;\r\n                let Oaddress= contact.address;\r\n                let Ocity= contact.city;\r\n                let Ostate= contact.state;\r\n                let OphoneNumber=contact.phoneNumber;\r\n                let Ozip= contact.zip;\r\n\r\n\r\n                this.setState({fullName: OfullName,\r\n                    address: Oaddress,\r\n                    city: Ocity,\r\n                    state: Ostate,\r\n                    phoneNumber: OphoneNumber,\r\n                    zip: Ozip\r\n                });\r\n            });\r\n        } \r\n           \r\n    }\r\n    changeNameHandler =(event)=>{\r\n        this.setState({fullName:event.target.value});\r\n        try {\r\n            checkName(event.target.value);\r\n            this.setState({ nameError: \"\" });\r\n        } catch (error) {\r\n            this.setState({ nameError: error });\r\n        }\r\n    }\r\n    changeAddressHandler =(event)=>{\r\n        this.setState({address:event.target.value});\r\n        try {\r\n            checkAddress(event.target.value);\r\n            this.setState({ addressError: \"\" });\r\n        } catch (error) {\r\n            this.setState({ addressError: error });\r\n        }\r\n    }\r\n    changeCityHandler =(event)=>{\r\n        this.setState({city:event.target.value});\r\n    }\r\n    changeStateHandler =(event)=>{\r\n        this.setState({state: event.target.value});\r\n    }\r\n    changePhoneNumberHandler =(event)=>{\r\n        this.setState({phoneNumber: event.target.value});\r\n        try {\r\n            checkPhoneNumber(event.target.value);\r\n            this.setState({ phoneError: \"\" });\r\n        } catch (error) {\r\n            this.setState({ phoneError: error });\r\n        }\r\n    }\r\n    changeZipCodeHandler =(event)=>{\r\n        this.setState({zip: event.target.value});\r\n        try {\r\n            checkZip(event.target.value);\r\n            this.setState({ zipError: \"\" });\r\n        } catch (error) {\r\n            this.setState({ zipError: error });\r\n        }\r\n    }\r\n    allFieldCorrect =()=>{\r\n        console.log(this.state);\r\n        if(this.state.nameError!=\"\")\r\n        return false;\r\n        if(this.state.addressError!=\"\")\r\n        return false;\r\n        if(this.state.phoneError!=\"\")\r\n        return false;\r\n        if(this.state.zipError!=\"\")\r\n        return false;\r\n        if(this.state.fullName==\"\")\r\n        return false;\r\n        if(this.state.address==\"\")\r\n        return false;\r\n        if(this.state.phoneNumber==\"\")\r\n        return false;\r\n        if(this.state.city==\"\")\r\n        return false;\r\n        if(this.state.state==\"\")\r\n        return false;\r\n        if(this.state.zip==\"\")\r\n        return false;\r\n\r\n\r\n        return true;\r\n    }\r\n    saveOrUpdateContact = async(event) => {\r\n        console.log(\"called saved\");\r\n        event.preventDefault();\r\n        \r\n            let contact = {\r\n                fullName: this.state.fullName,\r\n                address: this.state.address,\r\n                city: this.state.city,\r\n                state: this.state.state,\r\n                phoneNumber: this.state.phoneNumber,\r\n                zip: this.state.zip,\r\n            };\r\n            console.log('contact => ' + JSON.stringify(contact));\r\n            if(this.state.id === '_add'){\r\n                AddressBookService.createContact(contact).then(res =>{\r\n                    this.props.history.push('/home');\r\n                });\r\n            }else{\r\n                AddressBookService.updateContact(contact, this.state.id).then( res => {\r\n                    this.props.history.push('/home');\r\n                });\r\n            }\r\n\r\n    }\r\n    reset = (event) => {\r\n        this.setState({\r\n          fullName: \"\",\r\n          address: \"\",\r\n          city: \"\",\r\n          state: \"\",\r\n          phoneNumber:\"\",\r\n          zip: \"\",\r\n          nameError: \"\",\r\n          addressError: \"\",\r\n          phoneError: \"\",\r\n          zipError: \"\",\r\n        });\r\n    };\r\n    \r\n    \r\n    render(){\r\n        return(\r\n            \r\n            <div>\r\n                <header class=\"header-content header\">\r\n                    <div class=\"logo-content\">\r\n                        <img src={addressBookIcon} alt=\"\"/>\r\n                        <div>\r\n                            <span class=\"address-text\"> ADDRESS</span><br/>\r\n                            <span class=\"address-text address-book\"> BOOK</span>\r\n                        </div>\r\n                    </div>\r\n                </header>\r\n                <div class =\"form-content\">\r\n                    <form class =\"form\" action=\"#\">\r\n                        <div class =\"form-head\">\r\n                            <div class=\"form-header-text\">PERSON ADDRESS FORM</div>\r\n                            <div class=\"cancel-button\"><Link to=\"/home\"><img src={cancelIcon} alt=\"\"/></Link></div>\r\n                        </div>\r\n                        <div class=\"row-content\">\r\n                            <label class=\"label text\" for=\"fullName\">Full Name</label>\r\n                            <input class=\"input\" type=\"text\" id=\"fullName\" value={this.state.fullName} onChange={this.changeNameHandler}  name=\"fullName\" placeholder=\"Enter Your Full Name\" required/>\r\n                            <error-output class=\"text-error\" for=\"text\">{this.state.nameError}</error-output>\r\n                        </div>\r\n                        <div class=\"row-content\">\r\n                            <label class=\"label text\" for=\"address\">Address</label>\r\n                            <input class=\"input address-input\" value={this.state.address} type=\"text\" onChange={this.changeAddressHandler} id=\"address\" placeholder=\"Address\" required/>\r\n                            <error-output class =\"address-error\" for=\"text\">{this.state.addressError}</error-output>\r\n                        </div>\r\n                        <div class=\"select-input-fields\">\r\n                            <label class=\"label text\" for=\"city\" >City</label>\r\n                            <select id=\"city\" name=\"city\" value={this.state.city}  onChange={this.changeCityHandler}>\r\n                                <option value=\"Patna\">Patna</option>\r\n                                <option value=\"AArah\">Aarah</option>\r\n                                <option value=\"Buxar\">Buxar</option>\r\n                                <option value=\"Kanpur\">Kanpur</option>\r\n                                <option value=\"Lucknow\">Lucknow</option>\r\n                                <option value=\"Allahabad\">Allahabad</option>\r\n                            </select>\r\n                            <label class=\"label-text-select\" for=\"state\">State</label>\r\n                            <select id=\"state\" name=\"state\" value={this.state.state} onChange={this.changeStateHandler}>\r\n                                <option value=\"Bihar\">Bihar</option>\r\n                                <option value=\"Uttar Pradesh\">Uttar Pradesh</option>\r\n                                <option value=\"Madhya Pradesh\">Madhya Pradesh</option>\r\n                                <option value=\"Jharkhand\">Jharkhand</option>\r\n                                <option value=\"West Bengal\">West Bengal</option>\r\n                                <option value=\"Orissa\">Orissa</option>\r\n                            </select>\r\n                            <label class=\"label-text-select\" for=\"zip\">Zip Code</label>\r\n                            <input class=\"input\" type=\"text\" id=\"zipCode\" name=\"zipCode\" value={this.state.zip} onChange={this.changeZipCodeHandler} placeholder=\"Zip Code\" required/>\r\n                            <error-output class =\"zip-error\" for=\"text\">{this.state.zipError}</error-output>\r\n                        </div>\r\n                        <div class=\"row-content\">\r\n                            <label class=\"label text\" for=\"phone\">Phone Number</label>\r\n                            <input class=\"input\" type=\"text\" id=\"tel\" value={this.state.phoneNumber} name=\"tel\" onChange={this.changePhoneNumberHandler}  placeholder=\"Phone Number\" required/>\r\n                            <error-output class =\"tel-error\" for=\"text\">{this.state.phoneError}</error-output>\r\n                        </div>\r\n                        <div class=\"buttonParent\">\r\n                            <div class=\"submit-reset\">\r\n                                <button type=\"submit\" class=\"button submitButton\" id=\"submitButton\" disabled={!this.allFieldCorrect()} onClick={this.saveOrUpdateContact}>Add</button>\r\n                                <button type=\"reset\" class=\"button resetButton\" onClick={this.reset}>Reset</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(AddressBookForm)\r\n\r\n\r\n","C:\\Users\\hp\\Desktop\\HelloWorld\\address-book-react\\src\\services\\AddressBookService.js",[],"C:\\Users\\hp\\Desktop\\HelloWorld\\address-book-react\\src\\components\\address-book-form\\utility.js",["50","51","52","53"],"export const checkName = (name) => {\r\n    let nameRegex = RegExp('^[A-Z]{1}[a-z]{2,}([\\\\s][A-Z]{1}[a-z]{2,})?$');\r\n    if (!nameRegex.test(name)) throw \"Name is Incorrect!\";\r\n}\r\n\r\nexport const checkAddress = (address) => {\r\n    let addressRegex = RegExp('^[a-zA-Z0-9@/,\\\\s]{2,}$');\r\n    if (!addressRegex.test(address)) throw \"Address is Incorrect!\";\r\n}\r\n\r\nexport const checkPhoneNumber =(phoneNumber) =>{\r\n    let phoneRegex =RegExp('^[0-9]{1}[0-9]{9}$');\r\n    if(!phoneRegex.test(phoneNumber)) throw \"Phone Number is Incorrect!\";\r\n}\r\nexport const checkZip =(zip) =>{\r\n    let zipRegex =RegExp('^[0-9]{6}$');\r\n    if(!zipRegex.test(zip)) throw \"Zip Code is Invalid\";\r\n}\r\n",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":1,"column":8,"nodeType":"60","messageId":"61","endLine":1,"endColumn":12},{"ruleId":"58","severity":1,"message":"62","line":3,"column":46,"nodeType":"60","messageId":"61","endLine":3,"endColumn":54},{"ruleId":"58","severity":1,"message":"63","line":10,"column":9,"nodeType":"60","messageId":"61","endLine":10,"endColumn":18},{"ruleId":"58","severity":1,"message":"63","line":3,"column":9,"nodeType":"60","messageId":"61","endLine":3,"endColumn":18},{"ruleId":"64","severity":1,"message":"65","line":107,"column":32,"nodeType":"66","messageId":"67","endLine":107,"endColumn":34},{"ruleId":"64","severity":1,"message":"65","line":109,"column":35,"nodeType":"66","messageId":"67","endLine":109,"endColumn":37},{"ruleId":"64","severity":1,"message":"65","line":111,"column":33,"nodeType":"66","messageId":"67","endLine":111,"endColumn":35},{"ruleId":"64","severity":1,"message":"65","line":113,"column":31,"nodeType":"66","messageId":"67","endLine":113,"endColumn":33},{"ruleId":"64","severity":1,"message":"68","line":115,"column":31,"nodeType":"66","messageId":"67","endLine":115,"endColumn":33},{"ruleId":"64","severity":1,"message":"68","line":117,"column":30,"nodeType":"66","messageId":"67","endLine":117,"endColumn":32},{"ruleId":"64","severity":1,"message":"68","line":119,"column":34,"nodeType":"66","messageId":"67","endLine":119,"endColumn":36},{"ruleId":"64","severity":1,"message":"68","line":121,"column":27,"nodeType":"66","messageId":"67","endLine":121,"endColumn":29},{"ruleId":"64","severity":1,"message":"68","line":123,"column":28,"nodeType":"66","messageId":"67","endLine":123,"endColumn":30},{"ruleId":"64","severity":1,"message":"68","line":125,"column":26,"nodeType":"66","messageId":"67","endLine":125,"endColumn":28},{"ruleId":"69","severity":1,"message":"70","line":3,"column":32,"nodeType":"71","messageId":"72","endLine":3,"endColumn":59},{"ruleId":"69","severity":1,"message":"70","line":8,"column":38,"nodeType":"71","messageId":"72","endLine":8,"endColumn":68},{"ruleId":"69","severity":1,"message":"70","line":13,"column":39,"nodeType":"71","messageId":"72","endLine":13,"endColumn":74},{"ruleId":"69","severity":1,"message":"70","line":17,"column":29,"nodeType":"71","messageId":"72","endLine":17,"endColumn":57},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'useParams' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-global-assign","no-unsafe-negation"]